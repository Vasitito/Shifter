--- 
# TinyTapeout project information
project:
  wokwi_id:    368699385942452225        # If using wokwi, set this to your project's ID

# If using an HDL, set wokwi_id as 0 and uncomment and list your source files here. 
# Source files must be in ./src and you must list each source file separately
  # source_files:        
  #   - tt_um_seven_segment_seconds.v
  #   - decoder.v
  # top_module:  "tt_um_seven_segment_seconds"      # put the name of your top module here, make it unique by prepending your github username

# How many tiles your design occupies? A single tile is about 167x108 uM.
# Before changing this, please reach out to us on discord to discuss your design.
  tiles: "1x1"    # Valid values: 1x1, 1x2, 2x2, 4x2 or 8x2

# Keep a track of the submission yaml
yaml_version: 4

# As everyone will have access to all designs, try to make it easy for someone new to your design to know what
# it does and how to operate it. This info will be automatically collected and used to make a datasheet for the chip.
#
# Here is a great example: https://github.com/davidsiaw/tt02-davidsiaw-stackcalc/blob/38c5647f83aad2aec675d566aa3d67b98f0aac81/info.yaml
documentation: 
  author:       "Vasitito"
  title:        "shifter"
  language:     "Wokwi"
  description:  "shifter"

# Longer description of how the project works. You can use standard markdown format.
  how_it_works: |
    A configurable barrel shifter for right and left shift of 5-bit numbers

# Instructions on how someone could test your project, include things like what buttons do what and how to set the clock if needed
  how_to_test:  |
      Set bit 8 for the mode of shifting and bits 6-7 for the amount of shifting

# A description of what the inputs do (e.g. red button, SPI CLK, SPI MOSI, etc).
  inputs:
    - I0/Number[0]
    - I1/Number[1]
    - I2/Number[2]
    - I3/Number[3]
    - I4/Number[4]
    - I5/shift amount[0]
    - I6/shift amount[1]
    - I7/Mode of shifting
    
# A description of what the outputs do (e.g. status LED, SPI MISO, etc)
  outputs:
    # - segment a
    # - segment b
    # - segment c
    # - segment d
    # - segment e
    # - segment f
    # - segment g
    # - dot
    - O0/Number[0]/segment a
    - O1/Number[1]/segment b
    - O2/Number[2]/segment c
    - O3/Number[3]/segment d
    - O4/Number[4]/segment e
    - O5/Number[5]/segment f
    - O6/Number[6]/segment g
    - O7/Number[7]/dot
# A description of what the bidirectional I/O pins do (e.g. I2C SDA, I2C SCL, etc)
  bidirectional:
    - none
    - none
    - none
    - none
    - none
    - none
    - none
    - none

# The following fields are optional
  tag:          "test"      # comma separated list of tags: test, encryption, experiment, clock, animation, utility, industrial, pwm, fpga, alu, microprocessor, risc, riscv, sensor, signal generator, fft, filter, music, bcd, sound, serial, timer, random number generator, calculator, decoder, counter, puzzle, multiplier, game, oscillator,
  external_hw:  ""      # Describe any external hardware needed
  discord:      ""      # Your discord handle, used for communication and automatically assigning tapeout role after a submission
  doc_link:     ""      # URL to longer form documentation, eg the README.md in your repository
  clock_hz:     0       # Clock frequency in Hz (if required)
  picture:      ""      # relative path to a picture in your repository
